2020-07-31 22:11:32.061  INFO 10732 --- [main] com.example.demo.DemoConsumer            : No active profile set, falling back to default profiles: default
2020-07-31 22:11:32.676  INFO 10732 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=3ba7f7ed-5d1a-3f9d-b3e0-6999cd844e83
2020-07-31 22:11:32.705  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.example.demo.ProviderClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.714  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'io.opentracing.contrib.spring.cloud.async.DefaultAsyncAutoConfiguration$DefaultTracedAsyncConfigurerSupport' of type [io.opentracing.contrib.spring.cloud.async.DefaultAsyncAutoConfiguration$DefaultTracedAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$90abcff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.781  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'io.opentracing.contrib.spring.cloud.async.DefaultAsyncAutoConfiguration' of type [io.opentracing.contrib.spring.cloud.async.DefaultAsyncAutoConfiguration$$EnhancerBySpringCGLIB$$a288d9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.886  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'io.opentracing.contrib.spring.cloud.feign.FeignTracingAutoConfiguration' of type [io.opentracing.contrib.spring.cloud.feign.FeignTracingAutoConfiguration$$EnhancerBySpringCGLIB$$f87d991b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.896  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'io.opentracing.contrib.java.spring.jaeger.starter.JaegerAutoConfiguration' of type [io.opentracing.contrib.java.spring.jaeger.starter.JaegerAutoConfiguration$$EnhancerBySpringCGLIB$$1aef9b8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.912  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'opentracing.jaeger-io.opentracing.contrib.java.spring.jaeger.starter.JaegerConfigurationProperties' of type [io.opentracing.contrib.java.spring.jaeger.starter.JaegerConfigurationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.921  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'metricsFactory' of type [io.jaegertracing.internal.metrics.NoopMetricsFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.927  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'metrics' of type [io.jaegertracing.internal.metrics.Metrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.929  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'sampler' of type [io.jaegertracing.internal.samplers.ConstSampler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.952  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'reporter' of type [io.jaegertracing.internal.reporters.CompositeReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.960  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'tracer' of type [io.jaegertracing.internal.JaegerTracer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.966  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'io.opentracing.contrib.spring.web.starter.WebClientTracingAutoConfiguration$DefaultWebClientSpanDecorators' of type [io.opentracing.contrib.spring.web.starter.WebClientTracingAutoConfiguration$DefaultWebClientSpanDecorators$$EnhancerBySpringCGLIB$$2e75fd10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:32.971  INFO 10732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'standardTagsWebClientSpanDecorator' of type [io.opentracing.contrib.spring.web.client.WebClientSpanDecorator$StandardTags] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-31 22:11:33.281  WARN 10732 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-07-31 22:11:33.281  INFO 10732 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-31 22:11:33.285  WARN 10732 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-07-31 22:11:33.285  INFO 10732 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-31 22:11:34.612  INFO 10732 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-31 22:11:35.231  INFO 10732 --- [main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port(s): 18083
2020-07-31 22:11:35.248  INFO 10732 --- [main] com.example.demo.DemoConsumer            : Started DemoConsumer in 5.873 seconds (JVM running for 6.241)
2020-07-31 22:11:42.769  INFO 10732 --- [reactor-http-nio-2] i.j.internal.reporters.LoggingReporter   : Span reported: a3a4068e509d6828:dab36c793da7ab3f:a3a4068e509d6828:1 - GET
2020-07-31 22:11:42.782  INFO 10732 --- [reactor-http-nio-2] i.j.internal.reporters.LoggingReporter   : Span reported: a3a4068e509d6828:a3a4068e509d6828:0:1 - restProvider
2020-07-31 22:11:42.802 ERROR 10732 --- [reactor-http-nio-2] a.w.r.e.AbstractErrorWebExceptionHandler : [7f349602-1]  500 Server Error for HTTP GET "/echo-rest/asd"

org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://provider:18081/echo/asd": provider; nested exception is java.net.UnknownHostException: provider
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ io.opentracing.contrib.spring.web.webfilter.TracingWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/echo-rest/asd" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]
Caused by: java.net.UnknownHostException: provider
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:609) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:558) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015) ~[na:na]
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at io.opentracing.contrib.spring.web.client.TracingRestTemplateInterceptor.intercept(TracingRestTemplateInterceptor.java:89) ~[opentracing-spring-web-3.0.1.jar:na]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]

2020-07-31 22:11:43.409  INFO 10732 --- [reactor-http-nio-3] i.j.internal.reporters.LoggingReporter   : Span reported: 507520d1f76afe4f:ff060fa778426cf9:507520d1f76afe4f:1 - GET
2020-07-31 22:11:43.410  INFO 10732 --- [reactor-http-nio-3] i.j.internal.reporters.LoggingReporter   : Span reported: 507520d1f76afe4f:507520d1f76afe4f:0:1 - restProvider
2020-07-31 22:11:43.413 ERROR 10732 --- [reactor-http-nio-3] a.w.r.e.AbstractErrorWebExceptionHandler : [32789532-2]  500 Server Error for HTTP GET "/echo-rest/asd"

org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://provider:18081/echo/asd": provider; nested exception is java.net.UnknownHostException: provider
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ io.opentracing.contrib.spring.web.webfilter.TracingWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/echo-rest/asd" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]
Caused by: java.net.UnknownHostException: provider
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:609) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:558) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015) ~[na:na]
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at io.opentracing.contrib.spring.web.client.TracingRestTemplateInterceptor.intercept(TracingRestTemplateInterceptor.java:89) ~[opentracing-spring-web-3.0.1.jar:na]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]

2020-07-31 22:11:43.813  INFO 10732 --- [reactor-http-nio-4] i.j.internal.reporters.LoggingReporter   : Span reported: c568befdc8f81d1d:91821c47869ee64c:c568befdc8f81d1d:1 - GET
2020-07-31 22:11:43.814  INFO 10732 --- [reactor-http-nio-4] i.j.internal.reporters.LoggingReporter   : Span reported: c568befdc8f81d1d:c568befdc8f81d1d:0:1 - restProvider
2020-07-31 22:11:43.816 ERROR 10732 --- [reactor-http-nio-4] a.w.r.e.AbstractErrorWebExceptionHandler : [449875bb-3]  500 Server Error for HTTP GET "/echo-rest/asd"

org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://provider:18081/echo/asd": provider; nested exception is java.net.UnknownHostException: provider
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ io.opentracing.contrib.spring.web.webfilter.TracingWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/echo-rest/asd" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]
Caused by: java.net.UnknownHostException: provider
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:609) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:558) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015) ~[na:na]
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at io.opentracing.contrib.spring.web.client.TracingRestTemplateInterceptor.intercept(TracingRestTemplateInterceptor.java:89) ~[opentracing-spring-web-3.0.1.jar:na]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]

2020-07-31 22:11:44.153  INFO 10732 --- [reactor-http-nio-5] i.j.internal.reporters.LoggingReporter   : Span reported: 9d8ca926df59ac45:d79d9f1a37bdc58:9d8ca926df59ac45:1 - GET
2020-07-31 22:11:44.154  INFO 10732 --- [reactor-http-nio-5] i.j.internal.reporters.LoggingReporter   : Span reported: 9d8ca926df59ac45:9d8ca926df59ac45:0:1 - restProvider
2020-07-31 22:11:44.156 ERROR 10732 --- [reactor-http-nio-5] a.w.r.e.AbstractErrorWebExceptionHandler : [be32127a-4]  500 Server Error for HTTP GET "/echo-rest/asd"

org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://provider:18081/echo/asd": provider; nested exception is java.net.UnknownHostException: provider
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ io.opentracing.contrib.spring.web.webfilter.TracingWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/echo-rest/asd" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
		at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
		at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
		at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]
Caused by: java.net.UnknownHostException: provider
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:609) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:558) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015) ~[na:na]
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at io.opentracing.contrib.spring.web.client.TracingRestTemplateInterceptor.intercept(TracingRestTemplateInterceptor.java:89) ~[opentracing-spring-web-3.0.1.jar:na]
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:315) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at com.example.demo.DemoController.restProvider(DemoController.java:27) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:147) ~[spring-webflux-5.2.8.RELEASE.jar:5.2.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1824) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:58) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.onComplete(TracedSubscriber.java:84) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators.complete(Operators.java:135) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:144) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4198) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:274) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:851) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:173) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:132) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2026) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:145) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:441) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onNext$2(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onNext(TracedSubscriber.java:69) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:267) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$request$1(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.request(TracedSubscriber.java:64) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:228) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.reactor.TracedSubscriber.lambda$onSubscribe$0(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.withActiveSpan(TracedSubscriber.java:95) ~[opentracing-reactor-0.1.2.jar:na]
	at io.opentracing.contrib.reactor.TracedSubscriber.onSubscribe(TracedSubscriber.java:59) ~[opentracing-reactor-0.1.2.jar:na]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:161) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at io.opentracing.contrib.spring.web.webfilter.TracingOperator.subscribe(TracingOperator.java:75) ~[opentracing-spring-web-3.0.1.jar:na]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.3.8.RELEASE.jar:3.3.8.RELEASE]
	at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:65) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:514) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:267) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:462) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:170) ~[reactor-netty-0.9.10.RELEASE.jar:0.9.10.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]
	at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]

